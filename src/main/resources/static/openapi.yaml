openapi: 3.0.3
info:
  title: API Gateway Service
  description: This is the REST API Gateway for the Microservices Architecture
  version: v0.0.1
  license:
    name: Apache 2.0
externalDocs:
  description: API Gateway Documentation
  url: https://api-gateway-dummy-url.com/docs
servers:
  - url: http://localhost:9000
    description: Local development server
paths:
  /api/order:
    post:
      summary: Place a new order
      description: Create a new order in the system
      operationId: placeOrder
      requestBody:
        description: Order information to be placed
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
      responses:
        '200':
          description: Order placed successfully
          content:
            text/plain:
              schema:
                type: string
                example: "Order placed successfully"
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Products not found in inventory
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: Get all orders
      description: Retrieve all orders from the system
      operationId: getAllOrders
      responses:
        '200':
          description: List of orders retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  
  /api/product:
    get:
      summary: Get all products
      description: Retrieve all products from the system
      operationId: getAllProducts
      responses:
        '200':
          description: List of products retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      summary: Create a new product
      description: Add a new product to the system
      operationId: createProduct
      requestBody:
        description: Product information to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  
  /api/inventory:
    get:
      summary: Check inventory
      description: Check if products are in stock
      operationId: checkInventory
      parameters:
        - name: skuCode
          in: query
          description: SKU codes of products to check
          required: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
      responses:
        '200':
          description: Inventory check successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InventoryResponse'
        '404':
          description: Products not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    OrderRequest:
      type: object
      required:
        - skuCode
        - price
        - quantity
      properties:
        skuCode:
          type: string
          example: "IPHONE13-128"
        price:
          type: number
          format: decimal
          example: 999.99
        quantity:
          type: integer
          format: int32
          example: 1
    
    OrderResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        orderNumber:
          type: string
          example: "f9b9a8b7-c6d5-4e3f-2g1h-0i9j8k7l6m5n"
        skuCode:
          type: string
          example: "IPHONE13-128"
        price:
          type: number
          format: decimal
          example: 999.99
        quantity:
          type: integer
          format: int32
          example: 1
    
    ProductRequest:
      type: object
      required:
        - name
        - description
        - price
        - skuCode
      properties:
        name:
          type: string
          example: "iPhone 13"
        description:
          type: string
          example: "Apple iPhone 13 with 128GB storage"
        price:
          type: number
          format: decimal
          example: 999.99
        skuCode:
          type: string
          example: "IPHONE13-128"
    
    ProductResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: "iPhone 13"
        description:
          type: string
          example: "Apple iPhone 13 with 128GB storage"
        price:
          type: number
          format: decimal
          example: 999.99
        skuCode:
          type: string
          example: "IPHONE13-128"
    
    InventoryResponse:
      type: object
      properties:
        skuCode:
          type: string
          example: "IPHONE13-128"
        inStock:
          type: boolean
          example: true
        quantity:
          type: integer
          format: int32
          example: 10
    
    ErrorResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          example: "2023-05-20T14:30:15.123Z"
        status:
          type: integer
          example: 404
        error:
          type: string
          example: "Not Found"
        message:
          type: string
          example: "Product with Skucode: IPHONE13-128 is not in stock"
        path:
          type: string
          example: "/api/order"
